services:
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_USER: nsi
      POSTGRES_PASSWORD: ${PG_PASSWORD:-CHANGE_ME}
      POSTGRES_DB: nsi
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init/01_pg_init.sql:/docker-entrypoint-initdb.d/01_pg_init.sql:ro
      - ./init/02_pgcrypto.sql:/docker-entrypoint-initdb.d/02_pgcrypto.sql:ro
    ports:
      - "${PG_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "nsi"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --save '' --appendonly no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data

  web:
    build:
      context: ..
      dockerfile: apps/web/Dockerfile
      args:
        OPENAI_API_KEY: ${OPENAI_API_KEY}
        HF_TOKEN: ${HF_TOKEN}
        APP_BASE_URL: ${APP_BASE_URL}
        DATABASE_URL: ${DATABASE_URL}
        REDIS_URL: ${REDIS_URL}
        S3_ENDPOINT: ${S3_ENDPOINT}
        S3_ACCESS_KEY: ${S3_ACCESS_KEY}
        S3_SECRET_KEY: ${S3_SECRET_KEY}
        SMTP_HOST: ${SMTP_HOST}
        SMTP_USER: ${SMTP_USER}
        SMTP_PASS: ${SMTP_PASS}
        SMTP_FROM: ${SMTP_FROM}
        MAGIC_LINK_FROM: ${MAGIC_LINK_FROM}
        JWT_SECRET: ${JWT_SECRET}
    env_file: ../.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3100:3000"
    volumes:
      - ragdata:/data/rag_uploads

  worker:
    build:
      context: ..
      dockerfile: apps/worker/Dockerfile
    env_file: ../.env
    depends_on:
      - postgres
      - redis
      - minio
    volumes:
      - ragdata:/data/rag_uploads

volumes:
  pgdata:
  minio:
  ragdata:

